include ../../../partials/settings/_number
include ../../../partials/settings/_string
include ../../../partials/settings/_boolean

mixin display_value(name, item, handler)
  - var _status_classes = []
  - if (name in self.errors)
    - _status_classes.push('error')

  - if (self.errors[name])
  - _input_help_text = self.errors[name]
  - else if (self.t.exists('admin.setting.' + name + '_help'))
  - _input_help_text = self.t('admin.setting.' + name + '_help')
  - else
  - _input_help_text = null

  - if (!('value' in item))
    - value = item.default
  - else
    - value = item.value

  - if (item.overriden)
    - _status_classes.push('overriden');
  - else
    - _status_classes.push('inherited');
    
  .control-group(class=_status_classes.join(' '), id='cg_' + name)
    label.control-label(for='s_'+name) #{self.t('admin.setting.' + name)}
    .controls
      case item.type
        when 'number'
          mixin display_number(name, value, handler, _input_help_text)
        when 'string'
          mixin dispay_sting(name, value, handler, _input_help_text)
        when 'boolean'
          mixin display_boolean(name, value, handler, _input_help_text)
        default
          mixin dispay_sting(name, value, handler, _input_help_text)
      .row-fluid
        input.pull-right(
          type="checkbox",
          id='so_' + name,
          checked=(item.overriden),
          data-on-change='admin.users.usergroups.override_toggle')
